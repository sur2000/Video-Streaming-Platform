{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sur shri\\\\Video-Streaming-Platform\\\\client\\\\src\\\\Player.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoId: this.props.match.params.id,\n      videoData: {}\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(`http://localhost:4000/video/${this.state.videoId}/data`);\n      const data = await res.json();\n      this.setState({\n        videoData: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        muted: true,\n        autoPlay: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: `http://localhost:4000/video/${this.state.videoId}`,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"track\", {\n          label: \"English\",\n          kind: \"captions\",\n          srcLang: \"en\",\n          src: `http://localhost:4000/video/${this.state.videoId}/caption`,\n          default: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.videoData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sur shri/Video-Streaming-Platform/client/src/Player.js"],"names":["React","Component","Header","Player","constructor","props","state","videoId","match","params","id","videoData","componentDidMount","res","fetch","data","json","setState","error","console","log","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EADxB;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AACsB,QAAjBC,iBAAiB,GAAG;AACtB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8B,KAAKR,KAAL,CAAWC,OAAQ,OAAnD,CAAvB;AACA,YAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAEI;AAAb,OAAd;AACH,KAJD,CAIE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,QAAQ,MAA9B;AAAA,gCACY;AAAQ,UAAA,GAAG,EAAG,+BAA8B,KAAKf,KAAL,CAAWC,OAAQ,EAA/D;AAAkE,UAAA,IAAI,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEY;AAAO,UAAA,KAAK,EAAC,SAAb;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,OAAO,EAAC,IAA/C;AAAoD,UAAA,GAAG,EAAG,+BAA8B,KAAKD,KAAL,CAAWC,OAAQ,UAA3G;AAAsH,UAAA,OAAO;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAOQ;AAAA,kBAAM,KAAKD,KAAL,CAAWK,SAAX,CAAqBW;AAA3B;AAAA;AAAA;AAAA;AAAA,cAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA9ByC","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from './Header'\r\n\r\nexport default class Player extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoId: this.props.match.params.id,\r\n            videoData: {}\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await fetch(`http://localhost:4000/video/${this.state.videoId}/data`);\r\n            const data = await res.json();\r\n            this.setState({ videoData: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\"> \r\n            <Header />\r\n  \r\n            <video controls muted autoPlay>\r\n                        <source src={`http://localhost:4000/video/${this.state.videoId}`} type=\"video/mp4\"></source> \r\n                        <track label=\"English\" kind=\"captions\" srcLang=\"en\" src={`http://localhost:4000/video/${this.state.videoId}/caption`} default></track>\r\n                    </video>\r\n                    <h1>{ this.state.videoData.name }</h1>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}